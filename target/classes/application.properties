server.port = 80
spring.mandatory-file-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
logging.level.root=info
logging.level.com.PG1=info
logging.path=logs
logging.file=${logging.path}/log.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
logging.pattern.console=

## default connection pool
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://56191a67-e941-4de9-88bc-8eeb0687dad9.bkvfvtld0lmh0umkfi70.databases.appdomain.cloud:30031/ibmclouddb?sslmode=require
spring.datasource.username=ibm_cloud_83a7ab0f_3469_4f02_ad2f_b3f28e829a79
spring.datasource.password=83630a391eeae6f8ef550cba24d968d73823ba24d774676028b670dbc4482b0c
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#drop n create table again, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update


logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
